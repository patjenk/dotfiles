#!/usr/bin/env python
"""
Patrick Jenkins / @patjenk

ltime, or line timer, is a utility to time each line of output for a simple command. Each 
line of output will be prefaced with a tuple containing the time since we 
started and the time since the last line of output, respectively.

This requires the pexpect python module. You can install it with `pip install pexpect`.

example:
  ltime ls
"""
from datetime import datetime, timedelta
from sys import argv, stdout, exit
try:
  import pexpect
except ImportError:
  print "You need to install pexpect. Install with `pip install pexpect` or `easy_install pexpect`"
  exit(1)

class TimeOutput(object):
  start_datetime = None
  last_line_datetime = None 
 
  def __init__(self, args):
    start_datetime = datetime.now()
    last_line_datetime = start_datetime
    command_str = " ".join(args)
    child = pexpect.spawn(command_str, timeout=60*60*24*365*100)
    while True:
      try:
        next_line = child.readline()
        if '' == next_line:
          break
        this_line_datetime = datetime.now()
        print "(%12s, %12s) %s" % (str(this_line_datetime - start_datetime)[:12], str(this_line_datetime - last_line_datetime)[:12], next_line),
        stdout.flush()
        last_line_datetime = this_line_datetime
      except KeyboardInterrupt as e:
        break 
      except Exception as e:
        print e
        break 
    this_line_datetime = datetime.now()
    print "(%12s, %12s)" % (str(this_line_datetime - start_datetime)[:12], str(this_line_datetime - last_line_datetime)[:12]),

if __name__ == '__main__':
  TimeOutput(argv[1:]) 
